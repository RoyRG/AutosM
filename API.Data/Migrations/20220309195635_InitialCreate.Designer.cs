// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220309195635_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Entidades.Entidades.Autos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Año")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Movimiento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Estado")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Lote")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Modelo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LoteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModeloId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Activo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("LoteId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Autos");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Movimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Activo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Lote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Movimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Activo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lote");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Movimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Activo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Modelo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha_Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Movimiento")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id_Marca")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario_Activo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Autos", b =>
                {
                    b.HasOne("API.Entidades.Entidades.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("API.Entidades.Entidades.Lote", "Lote")
                        .WithMany()
                        .HasForeignKey("LoteId");

                    b.HasOne("API.Entidades.Entidades.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId");

                    b.Navigation("Estado");

                    b.Navigation("Lote");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("API.Entidades.Entidades.Modelo", b =>
                {
                    b.HasOne("API.Entidades.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
